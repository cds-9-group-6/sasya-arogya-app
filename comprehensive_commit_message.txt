feat: Implement comprehensive WhatsApp-style chat interface with disease/healthy plant card system

MAJOR FEATURE IMPLEMENTATION: Complete overhaul of chat interface to match WhatsApp design patterns
while maintaining agricultural theme and adding structured diagnostic card system for plant health analysis.

## Core WhatsApp-Style Interface Implementation

### Chat Background & Styling
- Implemented WhatsApp-inspired earthy beige background (#F7F3F0) with subtle texture patterns
- Added layer-based background design mimicking WhatsApp's characteristic depth and feel
- Updated message bubble colors: user messages (#D4E6D4), assistant messages (pure white #FFFFFF)
- Enhanced message bubble styling: 18dp corner radius, 1dp elevation for authentic WhatsApp appearance

### Message Layout Architecture
- Identified and corrected architecture: MainActivityFSM is actual launcher activity, not MainActivity
- Updated correct layout files: item_chat_assistant.xml and item_chat_user.xml used by ChatAdapter
- Fixed CardView and LinearLayout width constraints from wrap_content to match_parent
- Implemented proper WhatsApp-style message spacing and alignment

## Structured Diagnostic Card System

### Disease Detection Cards
- Added comprehensive disease card layout with orange left border (#FF8A65)
- Implemented warning icon (⚠️) with circular orange background
- Created structured layout: disease title, confidence percentage, severity level, symptoms, treatment
- Added intelligent text parsing to extract disease details from server responses
- Integrated with ChatMessage.diseaseName and ChatMessage.confidence fields

### Healthy Plant Cards  
- Implemented healthy plant card system with earthy green theme
- Added green left border (forest_green) with light green background (#E8F5E8)
- Created checkmark icon (✓) with circular green background
- Structured layout: healthy status, confidence, plant observations, care recommendations
- Conditional display logic: shows healthy card when diseaseName = "healthy"

### Smart Card Logic
- Implemented conditional rendering based on ChatMessage.diseaseName field
- Added anti-duplication system to prevent multiple card population on RecyclerView updates
- Created message content tracking to avoid re-rendering same diagnostic information
- Integrated fallback text parsing for cases where structured data unavailable

## Technical Implementation Details

### ChatAdapter Enhancements
- Added populateDiseaseCard() and populateHealthyCard() methods for dynamic content population
- Implemented extractIntroText(), extractSeverity(), extractDiseaseDetails() helper functions
- Added cardPopulated tracking and lastMessageText comparison for duplication prevention
- Enhanced bind() method with sophisticated conditional logic for card display

### Layout Resource Creation
- Created disease_card_background.xml with layer-list orange left border design
- Created healthy_card_background.xml with layer-list green left border design
- Added warning_icon_background.xml and healthy_icon_background.xml circular backgrounds
- Updated colors.xml with WhatsApp-compatible earthy color scheme

### Architecture Corrections
- Corrected development focus from unused MainActivity.kt to active MainActivityFSM.kt
- Updated actual production layout files used by RecyclerView adapter
- Fixed layout hierarchy and width constraint inheritance issues
- Resolved character-by-character text wrapping caused by layout collapse

## Bug Fixes and Optimizations

### Duplication Prevention
- Fixed issue where disease information displayed both in structured card and message text
- Implemented empty messageText when cards displayed while maintaining layout constraints
- Added unique message key tracking to prevent re-population on RecyclerView refreshes

### Layout Stability
- Resolved critical layout collapse causing vertical character wrapping
- Fixed CardView width constraints preventing proper text flow
- Updated all child element width properties for consistent layout behavior
- Maintained anti-duplication logic while ensuring proper visual presentation

### User Experience Improvements
- Clear visual distinction: green cards for healthy plants, orange cards for diseases
- Professional medical-grade appearance suitable for agricultural diagnostics
- Familiar WhatsApp interaction patterns reducing farmer learning curve
- Intelligent content extraction preserving important diagnostic information

## Files Modified

### Core Implementation
- app/src/main/java/com/sasya/arogya/fsm/ChatAdapter.kt: Complete card system logic
- app/src/main/res/layout/item_chat_assistant.xml: Structured card layouts and width constraints
- app/src/main/res/values/colors.xml: WhatsApp-style color definitions

### Visual Resources
- app/src/main/res/drawable/chat_background.xml: WhatsApp-style earthy background
- app/src/main/res/drawable/disease_card_background.xml: Orange left border design
- app/src/main/res/drawable/healthy_card_background.xml: Green left border design
- app/src/main/res/drawable/warning_icon_background.xml: Disease card warning icon
- app/src/main/res/drawable/healthy_icon_background.xml: Healthy card checkmark icon

## Testing and Validation
- Build successful with zero compilation errors across all changes
- Layout constraints validated for proper text flow and card presentation
- Anti-duplication logic tested for RecyclerView update scenarios
- Visual consistency verified for both healthy and disease diagnostic cases

## Impact and Benefits

### User Experience
- Familiar WhatsApp interface reduces learning curve for farmers
- Clear visual feedback: green = healthy, orange = disease detection
- Professional appearance builds trust in AI diagnostic capabilities
- Structured information presentation improves comprehension

### Technical Excellence
- Maintainable, scalable codebase with proper separation of concerns
- Resource-based theming ensures consistent visual identity
- Robust error handling and fallback mechanisms for data parsing
- Performance optimized with efficient RecyclerView adapter implementation

This comprehensive implementation transforms the chat interface into a professional,
WhatsApp-familiar diagnostic tool suitable for agricultural plant health analysis,
maintaining both technical excellence and user experience quality.

